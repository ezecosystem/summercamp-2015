---
- include: common.yml

# This is a setup for vagrant host, inherits from all
- hosts: all
  sudo: yes
  roles:
    - kernel
    - nodejs
    - varnish
    - { role: php, use_php56: true, use_php5_fpm: false, use_xdebug: true, activate_xdebug: false }
    - { role: mysql, use_mysql56: false, use_mysql_dev: true }
    - { role: composer, use_composer_no_dev: no, install_vendors: false }
    - { role: mailcatcher }
    - solr
    - jenkins
    - blackfire

  tasks:
    # Idempotent way to build a /etc/hosts file with Ansible.
    # Inspired from http://xmeblog.blogspot.com/2013/06/ansible-dynamicaly-update-etchosts.html
    - name: "Build hosts file"
      lineinfile:   dest=/etc/hosts
                    regexp='.*{{ item }}$'
                    line="127.0.0.1 {{item}}"
                    state=present
      with_items: HOSTS
      when: HOSTS is defined

    - name: restart Apache
      service: name=apache2 state=restarted
      sudo: yes
    - name: restart Varnish
      service: name=varnish state=restarted
      sudo: yes
      # taken from https://juriansluiman.nl/article/151/managing-ssh-known-hosts-with-ansible
    - name: Make sure the known hosts file exists
      file: "path=/home/vagrant/.ssh/known_hosts state=touch"
    - name: Check host name availability
      shell: "ssh-keygen -f /home/vagrant/.ssh/known_hosts -F {{ item }}"
      with_items:
        - github.com
        - bitbucket.org
      register: ssh_known_host_results
    - name: Scan the public key
      shell: "ssh-keyscan -H -T 10 {{ item.item }} >> /home/vagrant/.ssh/known_hosts"
      with_items: ssh_known_host_results.results
      when: item.stdout == ""